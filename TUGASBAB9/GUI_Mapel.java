/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TUGASBAB9;
import java.util.ArrayList; import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class GUI_Mapel extends javax.swing.JFrame {
private List<ManajemenMapel> listData = new ArrayList<>();
    /**
     * Creates new form GUI_Mapel
     */
    public GUI_Mapel() {
        initComponents();
        DefaultTableModel dataModel = (DefaultTableModel) tabel_data.getModel();
        int rowCount = dataModel.getRowCount(); 
        while (rowCount > 0) { 
        dataModel.removeRow(rowCount - 1);
        rowCount=dataModel.getRowCount();
        }
    }
public void batal() {
    // Mengosongkan teks pada input kode mata pelajaran
    txtKode.setText("");
    // Mengosongkan teks pada input nama mata pelajaran
    txtNama.setText("");
    // Mengosongkan teks pada input nama guru
    txtGuru.setText("");
    // Mengatur combo box kategori kembali ke pilihan pertama   (biasanya default)
    cmb_pilih.setSelectedIndex(0);
    // Mengosongkan teks pada input semester
    txtSemester.setText("");
 }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSemester = new javax.swing.JTextField();
        txtCari = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel_data = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnUbah = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnBatal = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnForm = new javax.swing.JButton();
        txtKode = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        cmb_pilih = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btnHapus = new javax.swing.JButton();
        btnCari = new javax.swing.JButton();
        txtGuru = new javax.swing.JTextField();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSemesterActionPerformed(evt);
            }
        });

        txtCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariActionPerformed(evt);
            }
        });

        tabel_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Kode ", "Nama Mapel", "Guru", "Kategori Kelas", "Semester"
            }
        ));
        tabel_data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_dataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabel_data);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("DATA MATA PELAJARAN");

        jLabel2.setText("Kode :");

        jLabel3.setText("Nama Mapel :");

        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        jLabel4.setText("Kategori Kelas :");

        jLabel5.setText("Semester :");

        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnForm.setText("Form Data Matkul");
        btnForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFormActionPerformed(evt);
            }
        });

        txtKode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKodeActionPerformed(evt);
            }
        });

        cmb_pilih.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Praktikum", "Bahasa" }));
        cmb_pilih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_pilihActionPerformed(evt);
            }
        });

        jLabel6.setText("Guru :");

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnCari.setText("Cariüîç");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123)
                        .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCari)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmb_pilih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtGuru, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtKode, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnSimpan)
                                .addGap(18, 18, 18)
                                .addComponent(btnUbah)
                                .addGap(18, 18, 18)
                                .addComponent(btnBatal)
                                .addGap(18, 18, 18)
                                .addComponent(btnHapus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnClose)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnForm)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnCari)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGuru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cmb_pilih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnForm))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSimpan)
                            .addComponent(btnUbah)
                            .addComponent(btnBatal)
                            .addComponent(btnHapus)
                            .addComponent(btnClose))))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSemesterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSemesterActionPerformed

    private void txtCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariActionPerformed
     
    }//GEN-LAST:event_txtCariActionPerformed

    private void tabel_dataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_dataMouseClicked

        //masukkan source code onclick pada tabel
    }//GEN-LAST:event_tabel_dataMouseClicked

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
// Mendapatkan indeks baris yang dipilih di tabel
int selectedRow = tabel_data.getSelectedRow();

// Jika tidak ada baris yang dipilih
if (selectedRow == -1) {
    JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diubah.", "Peringatan", JOptionPane.WARNING_MESSAGE);
    return;
}

try {
    // Mengambil input dari form
    String kode = txtKode.getText();
    String mapel = txtNama.getText();
    String guru = txtGuru.getText();
    String kategori = (String) cmb_pilih.getSelectedItem();
    int semester = Integer.parseInt(txtSemester.getText()); // parsing ke int

    // Mengambil objek ManajemenMapel dari list
    ManajemenMapel mp = listData.get(selectedRow);

    // Memperbarui data menggunakan method abstract yang sudah dioverride
    mp.setKode(kode);
    mp.setNama(mapel);
    mp.setGuru(guru);
    mp.setKategori(kategori);
    mp.setSemester(semester);

    // Update tabel
    DefaultTableModel model = (DefaultTableModel) tabel_data.getModel();
    model.setValueAt(mp.cetakKode(), selectedRow, 0);    // ambil dari method cetak
    model.setValueAt(mp.cetakNama(), selectedRow, 1);
    model.setValueAt(mp.cetakGuru(), selectedRow, 2);
    model.setValueAt(mp.cetakKategori(), selectedRow, 3);
    model.setValueAt(mp.cetakSemester(), selectedRow, 4);

    // Sukses
    JOptionPane.showMessageDialog(this, "Data berhasil diubah!");
    batal(); // clear input field

} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Semester harus berupa angka!", "Error", JOptionPane.ERROR_MESSAGE);
} catch (IndexOutOfBoundsException e) {
    JOptionPane.showMessageDialog(this, "Data tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btnUbahActionPerformed
    }
    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        
        batal();
    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
  // Mendapatkan model dari tabel untuk bisa menambahkan baris data
    DefaultTableModel dataModel = (DefaultTableModel) tabel_data.getModel();
//
    // Membuat list sementara untuk menampung data yang akan ditambahkan ke tabel
    List<ManajemenMapel> list = new ArrayList<>(); // Ini tidak perlu karena kita langsung menambah ke listData

    // Mengatur agar tabel membuat kolom secara otomatis berdasarkan model
    tabel_data.setAutoCreateColumnsFromModel(true);

    ManajemenMapel mhs = null; // Inisialisasi mhs di luar blok try-catch

    // Mengambil data dari combo box kategori
    String kategoriTerpilih = (String) cmb_pilih.getSelectedItem();

    // Mengecek apakah kategori dipilih atau tidak
    if (kategoriTerpilih != null) {
        // Membuat instance ManajemenMapel sesuai dengan kategori yang dipilih
        if (kategoriTerpilih.equals("Praktikum")) {
            mhs = new MataPelajaranPraktikum(); // Asumsi Anda punya kelas ini
        } else if (kategoriTerpilih.equals("Bahasa")) {
            mhs = new MataPelajaranBahasa();
        } else {
            JOptionPane.showMessageDialog(this, "Kategori kelas tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        mhs.setKategori(kategoriTerpilih); // Set kategori setelah instance dibuat
    } else {
        // Jika tidak ada kategori dipilih, tampilkan peringatan lalu keluar dari method
        JOptionPane.showMessageDialog(this, "Pilih kategori kelas!", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        // Mengubah input semester dari teks menjadi angka
        int semester = Integer.parseInt(txtSemester.getText());

        // Menyimpan data semester ke dalam objek
        mhs.setSemester(semester);

        // Mengisi data pada objek mhs berdasarkan inputan dari textfield
        mhs.setKode(txtKode.getText()); // Mengisi kode mata pelajaran
        mhs.setNama(txtNama.getText()); // Mengisi nama mata pelajaran
        mhs.setGuru(txtGuru.getText()); // Mengisi nama guru

        // Menambahkan objek mhs ke dalam listData (bukan list sementara)
        listData.add(mhs);

        // Menambahkan data ke tabel
        dataModel.addRow(new Object[] {
                mhs.cetakKode(),
                mhs.cetakNama(),
                mhs.cetakGuru(),
                mhs.cetakKategori(),
                mhs.cetakSemester()
        });

        // Menampilkan pesan sukses
        JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan!");

        // Mengosongkan field input setelah proses tambah data
        batal();

    } catch (NumberFormatException e) {
        // Jika semester tidak bisa dikonversi ke angka, tampilkan error
        JOptionPane.showMessageDialog(this, "Semester harus berupa angka!", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFormActionPerformed
    new GUI_Mapel().setVisible(true);
    this.dispose(); // Menutup form saat ini

    }//GEN-LAST:event_btnFormActionPerformed

    private void txtKodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKodeActionPerformed

    private void cmb_pilihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_pilihActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_pilihActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
    // Mendapatkan indeks baris yang dipilih dari tabel
    int selectedRow = tabel_data.getSelectedRow();
    // Jika tidak ada baris yang dipilih (nilai -1), tampilkan peringatan dan keluar dari method
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris untuk dihapus.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }
    // Tampilkan dialog konfirmasi sebelum menghapus
    int konfirmasi = JOptionPane.showConfirmDialog(this, "Yakin hapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
    // Jika pengguna memilih "YES", lanjutkan proses hapus
    if (konfirmasi == JOptionPane.YES_OPTION) {
        // Ambil model dari tabel
        DefaultTableModel model = (DefaultTableModel) tabel_data.getModel();

        // Pastikan indeks baris yang dipilih valid dalam listData
        if (selectedRow < listData.size()) {
            // Hapus data dari listData (struktur penyimpanan data utama)
            listData.remove(selectedRow);

            // Hapus baris dari tampilan tabel
            model.removeRow(selectedRow);

            // Tampilkan pesan bahwa data berhasil dihapus
            JOptionPane.showMessageDialog(this, "Data dihapus.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Jika terjadi kesalahan indeks (tidak sinkron), tampilkan pesan error
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: Indeks baris tidak valid.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
    // Ambil teks dari inputan JTextField pencarian (misalnya txtCari)
    String namaCari = txtCari.getText().trim(); // Menghilangkan spasi di awal/akhir
    
    // Periksa apakah input pencarian kosong
    if (namaCari.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Masukkan nama mata pelajaran yang ingin dicari.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return; // Hentikan proses pencarian
    }
    
    // Bersihkan tabel sebelum menampilkan hasil pencarian
    DefaultTableModel model = (DefaultTableModel) tabel_data.getModel();
    model.setRowCount(0);
    
    // Flag untuk menandakan apakah data ditemukan
    boolean ditemukan = false;
    
    // Iterasi semua data dalam listData yang berisi objek ManajemenMapel
    for (int i = 0; i < listData.size(); i++) {
        ManajemenMapel mp = listData.get(i);
    
        // Cek apakah nama dalam list sama (tidak case sensitive) dengan yang dicari
        if (mp.cetakNama().equalsIgnoreCase(namaCari)) {
            // Buat baris baru berisi data dari objek yang ditemukan
            List<Object> row = new ArrayList<>();
            row.add(mp.cetakKode());
            row.add(mp.cetakNama());
            row.add(mp.cetakGuru());
            row.add(mp.cetakKategori());
            row.add(mp.cetakSemester());
    
            // Tambahkan baris ke tabel
            model.addRow(row.toArray());
    
            ditemukan = true;
            // Hapus perintah break agar pencarian terus menyusul data yang lain
        }
    }
    
    // Jika data tidak ditemukan sama sekali, tampilkan pesan
    if (!ditemukan) {
        JOptionPane.showMessageDialog(this, "Data dengan nama tersebut tidak ditemukan.", "Hasil Pencarian", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_Mapel().setVisible(true);             

            }
        
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnForm;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JComboBox<String> cmb_pilih;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabel_data;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtGuru;
    private javax.swing.JTextField txtKode;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtSemester;
    // End of variables declaration//GEN-END:variables
}

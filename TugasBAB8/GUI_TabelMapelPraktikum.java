/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package TugasBAB8;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Scanner;
/**
 *
 * @author LENOVO
 */
public class GUI_TabelMapelPraktikum extends javax.swing.JFrame {
ArrayList<MataPelajaranPraktikum> listData = new ArrayList<>();
    /**
     * Creates new form GUI_TabelMapelPraktikum
     */
    public GUI_TabelMapelPraktikum() {
        initComponents();
        tampilkanData(); 
 
    }
 private void tampilkanData() {
        DefaultTableModel model = (DefaultTableModel) tabel_data.getModel();
        model.setRowCount(0);
        for (MataPelajaranPraktikum mp : listData) {
            Object[] rowData = {
                mp.cetakKelasAsal(),
                mp.cetakDurasi()+" Jam",
                mp.cetakJumlahAslab(),
                mp.cetakKelas(),
                mp.cetakLaporan() + " | " +
                mp.cetakAlat() + " | " +
                mp.cetakModul() + " | ",
                mp.cetakStatus()
            };
            model.addRow(rowData);
        }
    }
   private void batal() {
        txtKelasAsal.setText("");
        txtDurasi.setText("");
        txtJumlahAslab.setText("");
        cmb_kelas.setSelectedIndex(0);
        chkLaporan.setSelected(false);
        chkAlat.setSelected(false);
        chkModul.setSelected(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnHapus = new javax.swing.JButton();
        btnCari = new javax.swing.JButton();
        txtCari = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel_data = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnUbah = new javax.swing.JButton();
        chkLaporan = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        btnBatal = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnPraktikum = new javax.swing.JButton();
        txtDurasi = new javax.swing.JTextField();
        txtJumlahAslab = new javax.swing.JTextField();
        chkModul = new javax.swing.JCheckBox();
        cmb_kelas = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        chkAlat = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        txtKelasAsal = new javax.swing.JTextField();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        getContentPane().add(btnHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(681, 247, -1, -1));

        btnCari.setText("Cariüîç");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        getContentPane().add(btnCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(1061, 36, -1, -1));

        txtCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariActionPerformed(evt);
            }
        });
        getContentPane().add(txtCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(984, 36, 71, -1));

        tabel_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Kelas", "Durasi Kelas", "Jumlah Asleb", "Kelas", "Syarat Lab", "Status"
            }
        ));
        tabel_data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel_dataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabel_data);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(343, 80, 800, 161));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel1.setText("DATA KELAS PRAKTIKUM");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(626, 33, -1, -1));

        jLabel2.setText("Durasi Kelas :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 111, -1, -1));

        jLabel3.setText("Jumlah Asleb :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 139, -1, -1));

        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });
        getContentPane().add(btnUbah, new org.netbeans.lib.awtextra.AbsoluteConstraints(464, 247, -1, -1));

        chkLaporan.setText("Laporan Kegiatan");
        chkLaporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkLaporanActionPerformed(evt);
            }
        });
        getContentPane().add(chkLaporan, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 212, 183, -1));

        jLabel4.setText("Data Lab :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 214, -1, -1));

        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });
        getContentPane().add(btnBatal, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 247, -1, -1));

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        getContentPane().add(btnSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(343, 247, -1, -1));

        btnPraktikum.setText("Form Tabel Praktikum");
        btnPraktikum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPraktikumActionPerformed(evt);
            }
        });
        getContentPane().add(btnPraktikum, new org.netbeans.lib.awtextra.AbsoluteConstraints(937, 310, -1, -1));

        txtDurasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDurasiActionPerformed(evt);
            }
        });
        getContentPane().add(txtDurasi, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 108, 174, -1));
        getContentPane().add(txtJumlahAslab, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 136, 174, -1));

        chkModul.setText("Modul Praktikum");
        chkModul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkModulActionPerformed(evt);
            }
        });
        getContentPane().add(chkModul, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 258, 228, -1));

        cmb_kelas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fisika", "Biologi", "Kimia", " ", " " }));
        cmb_kelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_kelasActionPerformed(evt);
            }
        });
        getContentPane().add(cmb_kelas, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 164, -1, -1));

        jLabel6.setText("Kelas :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 167, 53, -1));

        chkAlat.setText("Ketersediaan Alat");
        chkAlat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAlatActionPerformed(evt);
            }
        });
        getContentPane().add(chkAlat, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 232, 192, -1));

        jLabel5.setText("Kelas Asal :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 80, 89, 22));
        getContentPane().add(txtKelasAsal, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 80, 174, -1));

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 247, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
       int selectedRow = tabel_data.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            listData.remove(selectedRow);
            tampilkanData();
            JOptionPane.showMessageDialog(this, "Data berhasil dihapus!");
            batal();
        }       // TODO add your handling code here:
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
      String keyword = txtCari.getText().trim().toLowerCase();

    // Periksa apakah input pencarian kosong
    if (keyword.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Masukkan Kelas praktikum yang ingin dicari.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return; // Keluar dari method jika input kosong
    }

    DefaultTableModel model = (DefaultTableModel) tabel_data.getModel();
    model.setRowCount(0);
    boolean ditemukan = false;

    for (MataPelajaranPraktikum mp : listData) {
        if (mp.cetakKelas().toLowerCase().contains(keyword) ||
            mp.cetakDurasi().toLowerCase().contains(keyword) ||
            String.valueOf(mp.cetakJumlahAslab()).toLowerCase().contains(keyword) ||
            mp.cetakKelas().toLowerCase().contains(keyword) ||
            (mp.cetakLaporan() + " | " + mp.cetakAlat() + " | " + mp.cetakModul()).toLowerCase().contains(keyword) ||
            mp.cetakStatus().toLowerCase().contains(keyword)) {
            Object[] rowData = {
                mp.cetakKelasAsal(),
                mp.cetakDurasi(),
                mp.cetakJumlahAslab(),
                mp.cetakKelas(),
                mp.cetakLaporan() + " | " +
                mp.cetakAlat() + " | " +
                mp.cetakModul(),
                mp.cetakStatus()
            };
            model.addRow(rowData);
            ditemukan = true;
        }
    }

    if (!ditemukan) {
        JOptionPane.showMessageDialog(this, "Data dengan kata kunci '" + keyword + "' tidak ditemukan.", "Pencarian", JOptionPane.INFORMATION_MESSAGE);
        tampilkanData(); // Tampilkan kembali semua data jika tidak ada yang cocok
    }  
    }//GEN-LAST:event_btnCariActionPerformed

    private void txtCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCariActionPerformed

    private void tabel_dataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_dataMouseClicked

    }//GEN-LAST:event_tabel_dataMouseClicked

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
    int selectedRow = tabel_data.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diubah.", "Peringatan", JOptionPane.WARNING_MESSAGE);
        return;
    }

    String kelasAsal = txtKelasAsal.getText().trim(); // Tambahkan trim()
    String durasi = txtDurasi.getText().trim();       // Tambahkan trim()
    String jumlahAslabStr = txtJumlahAslab.getText().trim(); // Ambil sebagai String dulu
    String kelas = (String) cmb_kelas.getSelectedItem();
    boolean laporanChecked = chkLaporan.isSelected();
    boolean alatChecked = chkAlat.isSelected();
    boolean modulChecked = chkModul.isSelected();
    String laporan = laporanChecked ? "‚úì" : "‚úó";
    String alat = alatChecked ? "‚úì" : "‚úó";
    String modul = modulChecked ? "‚úì" : "‚úó";
    String statusPraktikum;

    // Validasi input jumlah aslab
    int jumlahAslab;
    try {
        jumlahAslab = Integer.parseInt(jumlahAslabStr);
        if (jumlahAslab <= 0) {
            JOptionPane.showMessageDialog(this, "Jumlah Aslab harus lebih dari 0.", "Input Tidak Valid", JOptionPane.ERROR_MESSAGE);
            return; // Batalkan perubahan
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Jumlah Aslab harus berupa angka.", "Input Tidak Valid", JOptionPane.ERROR_MESSAGE);
        return; // Batalkan perubahan
    }

    // Logika penentuan status praktikum (sesuaikan dengan kebutuhan)
    if (!laporanChecked && !alatChecked && !modulChecked) {
        statusPraktikum = "DILARANG";
    } else if (!alatChecked && laporanChecked && modulChecked) {
        statusPraktikum = "DILARANG";
    } else if ((laporanChecked ? 1 : 0) + (alatChecked ? 1 : 0) + (modulChecked ? 1 : 0) == 1) {
        statusPraktikum = "DILARANG";
    } else {
        statusPraktikum = "DIIZINKAN";
    }

    MataPelajaranPraktikum mp = listData.get(selectedRow);
    mp.setDataKelasAsal(kelasAsal);
    mp.setDataDurasi(durasi);
    mp.setDataJumlahAslab(jumlahAslab); // Gunakan nilai int yang sudah divalidasi
    mp.setDataKelas(kelas);
    mp.setDataLaporan(laporan);
    mp.setDataAlat(alat);
    mp.setDataModul(modul);
    mp.setDataStatus(statusPraktikum); // Gunakan setter yang sesuai

    tampilkanData();
    JOptionPane.showMessageDialog(this, "Data berhasil diubah!");
    batal();
    }//GEN-LAST:event_btnUbahActionPerformed

    private void chkLaporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkLaporanActionPerformed
      
    }//GEN-LAST:event_chkLaporanActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        // TODO add your handling code here:
        batal();
    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
    int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menyimpan data ini?", "Konfirmasi Simpan", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        String kelasAsal = txtKelasAsal.getText().trim();
        String durasiInput = txtDurasi.getText().trim(); // Ambil input dari txtDurasi
        String jumlahAslabStr = txtJumlahAslab.getText().trim();
        String kelas = (String) cmb_kelas.getSelectedItem();
        boolean laporanChecked = chkLaporan.isSelected();
        boolean alatChecked = chkAlat.isSelected();
        boolean modulChecked = chkModul.isSelected();
        String laporan = laporanChecked ? "‚úì" : "‚úó";
        String alat = alatChecked ? "‚úì" : "‚úó";
        String modul = modulChecked ? "‚úì" : "‚úó";
        String statusPraktikum;

        int jumlahAslab;
        try {
            jumlahAslab = Integer.parseInt(jumlahAslabStr);
            if (jumlahAslab <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah Aslab harus lebih dari 0.", "Input Tidak Valid", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Jumlah Aslab harus berupa angka.", "Input Tidak Valid", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Contoh penggunaan Scanner untuk memproses input durasi (angka dipisahkan spasi)
        Scanner scanner = new Scanner(durasiInput);
        scanner.useDelimiter("\\s+"); // Delimiter adalah satu atau lebih spasi
        ArrayList<Integer> daftarDurasi = new ArrayList<>();
        while (scanner.hasNextInt()) {
            daftarDurasi.add(scanner.nextInt());
        }
        scanner.close();

        // Sekarang 'daftarDurasi' berisi angka-angka yang dimasukkan pengguna
        // Anda bisa melakukan sesuatu dengan daftar ini, misalnya mengambil yang pertama
        String durasiDiproses = " ";
        if (!daftarDurasi.isEmpty()) {
            durasiDiproses = String.valueOf(daftarDurasi.get(0)); // Ambil angka pertama sebagai durasi
            JOptionPane.showMessageDialog(this, "Angka durasi yang diproses: " + durasiDiproses + " Jam");
        } else {
            JOptionPane.showMessageDialog(this, "Tidak ada angka valid yang dimasukkan untuk durasi.", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return; // Batalkan penyimpanan jika tidak ada durasi valid
        }

        if (!laporanChecked && !alatChecked && !modulChecked) {
            statusPraktikum = "DILARANG";
        } else if (!alatChecked && laporanChecked && modulChecked) {
            statusPraktikum = "DILARANG";
        } else if ((laporanChecked ? 1 : 0) + (alatChecked ? 1 : 0) + (modulChecked ? 1 : 0) == 1) {
            statusPraktikum = "DILARANG";
        } else {
            statusPraktikum = "DIIZINKAN";
        }

        MataPelajaranPraktikum mp = new MataPelajaranPraktikum();
        mp.setDataKelasAsal(kelasAsal);
        mp.setDataDurasi(durasiDiproses); // Gunakan durasi yang diproses dari Scanner
        mp.setDataJumlahAslab(jumlahAslab);
        mp.setDataKelas(kelas);
        mp.setDataLaporan(laporan);
        mp.setDataAlat(alat);
        mp.setDataModul(modul);
        mp.setDataStatus(statusPraktikum);

        int indexToUpdate = -1;
        for (int i = 0; i < listData.size(); i++) {
            if (listData.get(i).cetakKelasAsal().equals(kelasAsal)) {
                indexToUpdate = i;
                break;
            }
        }

        if (indexToUpdate != -1) {
            listData.set(indexToUpdate, mp);
        } else {
            listData.add(mp);
        }

        tampilkanData();
        JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
        batal();
    }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnPraktikumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPraktikumActionPerformed
    new GUI_TabelMapelPraktikum().setVisible(true);
    this.dispose();
    }//GEN-LAST:event_btnPraktikumActionPerformed

    private void txtDurasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDurasiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDurasiActionPerformed

    private void cmb_kelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_kelasActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_kelasActionPerformed

    private void chkAlatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAlatActionPerformed

    }//GEN-LAST:event_chkAlatActionPerformed

    private void chkModulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkModulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkModulActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
    dispose();       
    }//GEN-LAST:event_btnCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_TabelMapelPraktikum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_TabelMapelPraktikum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_TabelMapelPraktikum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_TabelMapelPraktikum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_TabelMapelPraktikum().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnPraktikum;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JCheckBox chkAlat;
    private javax.swing.JCheckBox chkLaporan;
    private javax.swing.JCheckBox chkModul;
    private javax.swing.JComboBox<String> cmb_kelas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabel_data;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtDurasi;
    private javax.swing.JTextField txtJumlahAslab;
    private javax.swing.JTextField txtKelasAsal;
    // End of variables declaration//GEN-END:variables
}
